psql --username=freecodecamp --dbname=postgres
pg_dump -cC --inserts -U freecodecamp universe > universe.sql
psql -U postgres < universe.sql

Celestial Bodies Database
Instructions
For this project, you need to log in to PostgreSQL with psql to create your database. Do that by entering psql --username=freecodecamp --dbname=postgres in the terminal. Make all the tests below pass to complete the project. Be sure to get creative, and have fun!

Don't forget to connect to your database after you create it ðŸ˜„

Here's some ideas for other column and table names: description, has_life, is_spherical, age_in_millions_of_years, planet_types, galaxy_types, distance_from_earth.

Notes:
If you leave your virtual machine, your database may not be saved. You can make a dump of it by entering pg_dump -cC --inserts -U freecodecamp universe > universe.sql in a bash terminal (not the psql one). It will save the commands to rebuild your database in universe.sql. The file will be located where the command was entered. If it's anything inside the project folder, the file will be saved in the VM. You can rebuild the database by entering psql -U postgres < universe.sql in a terminal where the .sql file is.

If you are saving your progress on freeCodeCamp.org, after getting all the tests to pass, follow the instructions above to save a dump of your database. Save the universe.sql file in a public repository and submit the URL to it on freeCodeCamp.org.

Complete the tasks below

You should create a database named universe

Be sure to connect to your database with \c universe. Then, you should add tables named galaxy, star, planet, and moon

Each table should have a primary key

Each primary key should automatically increment

Each table should have a name column

You should use the INT data type for at least two columns that are not a primary or foreign key

You should use the NUMERIC data type at least once

You should use the TEXT data type at least once

You should use the BOOLEAN data type on at least two columns

Each "star" should have a foreign key that references one of the rows in galaxy

Each "planet" should have a foreign key that references one of the rows in star

Each "moon" should have a foreign key that references one of the rows in planet

Your database should have at least five tables

Each table should have at least three rows

The galaxy and star tables should each have at least six rows

The planet table should have at least 12 rows

The moon table should have at least 20 rows

Each table should have at least three columns

The galaxy, star, planet, and moon tables should each have at least five columns

At least two columns per table should not accept NULL values

At least one column from each table should be required to be UNIQUE

All columns named name should be of type VARCHAR

Each primary key column should follow the naming convention table_name_id. For example, the moon table should have a primary key column named moon_id

Each foreign key column should have the same name as the column it is referencing

===========================================================================================================



 CREATE TABLE transactions (
    transactions_id SERIAL PRIMARY KEY,
    product_id INT,
    quantity INT,
    FOREIGN KEY (product_id) REFERENCES products(product_id)
);

g_code varchar(5), FOREIGN KEY (g_code) REFERENCES galaxy (g_code);
s_code varchar(5), FOREIGN KEY (s_code) REFERENCES star (s_code);
p_code varchar(5), FOREIGN KEY (p_code) REFERENCES planet (p_code);

create table galaxy (galaxy_id SERIAL primary key, name varchar(255) not null, radius numeric(18,4),distance int, g_code varchar(5) unique );
create table star(star_id SERIAL primary key, name varchar(255) not null,  radius numeric(8,4),planets_there boolean,s_code varchar(5) unique,g_code varchar(5), FOREIGN KEY (g_code) REFERENCES galaxy (g_code));
create table planet(planet_id SERIAL primary key, name varchar(255) not null, radius numeric(8,4), type_planet varchar(30), satellites_there BOOLEAN, no_of_satellites INT, p_code varchar(5) unique ,info text,s_code varchar(5), FOREIGN KEY (s_code) REFERENCES star (s_code));
create table moon( moon_id SERIAL primary key, name varchar(255) unique not null, radius numeric(8,4),color varchar(20),p_code varchar(5), FOREIGN KEY (p_code) REFERENCES planet (p_code));

universe=> \d galaxy
                                          Table "public.galaxy"
+-----------+------------------------+-----------+----------+-------------------------------------------+
|  Column   |          Type          | Collation | Nullable |                  Default                  |
+-----------+------------------------+-----------+----------+-------------------------------------------+
| galaxy_id | integer                |           | not null | nextval('galaxy_galaxy_id_seq'::regclass) |
| name      | character varying(255) |           | not null |                                           |
| radius    | numeric(18,4)          |           |          |                                           |
| distance  | integer                |           |          |                                           |
| g_code    | character varying(5)   |           |          |                                           |
+-----------+------------------------+-----------+----------+-------------------------------------------+
Indexes:
    "galaxy_pkey" PRIMARY KEY, btree (galaxy_id)
    "galaxy_g_code_key" UNIQUE CONSTRAINT, btree (g_code)
Referenced by:
    TABLE "star" CONSTRAINT "star_g_code_fkey" FOREIGN KEY (g_code) REFERENCES galaxy(g_code)


insert into galaxy (name,radius,distance,g_code) values ('G1',58948.4932,342,'G11'),('G2',432913.4922,624,'G22'),('G3',77934.0234,164,'G33'),('G4',8392.874,593,'G44'),('G5',332987.7542,528,'G55'),('G6',1985.039,932,'G66');

                                           Table "public.star"
+---------------+------------------------+-----------+----------+---------------------------------------+
|    Column     |          Type          | Collation | Nullable |                Default                |
+---------------+------------------------+-----------+----------+---------------------------------------+
| star_id       | integer                |           | not null | nextval('star_star_id_seq'::regclass) |
| name          | character varying(255) |           | not null |                                       |
| radius        | numeric(8,4)           |           |          |                                       |
| planets_there | boolean                |           |          |                                       |
| s_code        | character varying(5)   |           |          |                                       |
| g_code        | character varying(5)   |           |          |                                       |
+---------------+------------------------+-----------+----------+---------------------------------------+
Indexes:
    "star_pkey" PRIMARY KEY, btree (star_id)
    "star_s_code_key" UNIQUE CONSTRAINT, btree (s_code)
Foreign-key constraints:
    "star_g_code_fkey" FOREIGN KEY (g_code) REFERENCES galaxy(g_code)
Referenced by:
    TABLE "planet" CONSTRAINT "planet_s_code_fkey" FOREIGN KEY (s_code) REFERENCES star(s_code)

insert into star (name,radius,planets_there,s_code,g_code) values('s1',8534,TRUE,'s11','G22'),('s2',4382,TRUE,'s22','G33'),('s3',2984,FALSE,'s33','G44'),('s4',3928.5,TRUE,'s44','G66'),('s5',6453.654,TRUE,'s55','G11'),
('s6',7632,TRUE,'s66','G55'),('s7',5823,FALSE,'s77','G11'),('s8',1984,TRUE,'s88','G33');


insert into star (name,radius,planets_there,s_code,g_code) values('s1',8534,TRUE,'s11','G22'),('s2',4382,TRUE,'s22','G33'),('s3',2984,FALSE,'s33','G44'),('s4',3928.5,TRUE,'s44','G66'),('s5',6453.654,TRUE,'s55','G11'),
('s6',7632,TRUE,'s66','G55'),('s7',5823,FALSE,'s77','G11'),('s8',1984,TRUE,'s88','G33');

universe=> \d planet
                                             Table "public.planet"
+------------------+------------------------+-----------+----------+-------------------------------------------+
|      Column      |          Type          | Collation | Nullable |                  Default                  |
+------------------+------------------------+-----------+----------+-------------------------------------------+
| planet_id        | integer                |           | not null | nextval('planet_planet_id_seq'::regclass) |
| name             | character varying(255) |           | not null |                                           |
| radius           | numeric(8,4)           |           |          |                                           |
| type_planet      | character varying(30)  |           |          |                                           |
| satellites_there | boolean                |           |          |                                           |
| no_of_satellites | integer                |           |          |                                           |
| p_code           | character varying(5)   |           |          |                                           |
| info             | text                   |           |          |                                           |
| s_code           | character varying(5)   |           |          |                                           |
+------------------+------------------------+-----------+----------+-------------------------------------------+
Indexes:
    "planet_pkey" PRIMARY KEY, btree (planet_id)
    "planet_p_code_key" UNIQUE CONSTRAINT, btree (p_code)
Foreign-key constraints:
    "planet_s_code_fkey" FOREIGN KEY (s_code) REFERENCES star(s_code)
Referenced by:
    TABLE "moon" CONSTRAINT "moon_p_code_fkey" FOREIGN KEY (p_code) REFERENCES planet(p_code)
	
 terrestrial  gas ice 

insert into planet (name,radius,type_planet,satellites_there,no_of_satellites,p_code,info,s_code) values 
('p1',865.73,'gas',TRUE,10,'p11','it is gas type planet','s33'),
('p2',854.73,'terrestrial',TRUE,1,'p22','it is terrestrial type planet','s55'),
('p3',857.3,'ice',FALSE,4,'p33','it is ice type planet','s88'),
('p4',853.73,'gas',TRUE,9,'p44','it is gas type planet','s66'),
('p5',875.73,'terrestrial',FALSE,10,'p55','it is terrestrial type planet','s33'),
('p6',857.3,'ice',TRUE,13,'p66','it is ice type planet','s77'),
('p7',851.73,'gas',TRUE,1,'p77','it is gas type planet','s22'),
('p8',857.33,'terrestrial',FALSE,10,'p88','it is terrestrial type planet','s44'),
('p9',858.73,'ice',TRUE,15,'p99','it is ice type planet','s33'),
('p10',85.973,'terrestrial',TRUE,10,'p00','it is terrestrial type planet','s55'),
('p11',85.673,'gas',FALSE,2,'p111','it is gas type planet','s22'),
('p12',85.73,'terrestrial',TRUE,0,'p222','it is terrestrial type planet','s33'),
('p13',84.573,'ice',FALSE,0,'p333','it is ice type planet','s55'),
('p14',85.373,'gas',TRUE,1,'p444','it is gas type planet','s11'),
('p15',85.73,'terrestrial',TRUE,1,'p555','it is terrestrial type planet','s77'),
('p16',85.7653,'gas',TRUE,4,'p666','it is gas type planet','s55');


universe=> \d moon
                                        Table "public.moon"
+---------+------------------------+-----------+----------+---------------------------------------+
| Column  |          Type          | Collation | Nullable |                Default                |
+---------+------------------------+-----------+----------+---------------------------------------+
| moon_id | integer                |           | not null | nextval('moon_moon_id_seq'::regclass) |
| name    | character varying(255) |           | not null |                                       |
| radius  | numeric(8,4)           |           |          |                                       |
| color   | character varying(20)  |           |          |                                       |
| p_code  | character varying(5)   |           |          |                                       |
+---------+------------------------+-----------+----------+---------------------------------------+
Indexes:
    "moon_pkey" PRIMARY KEY, btree (moon_id)
    "moon_name_key" UNIQUE CONSTRAINT, btree (name)
Foreign-key constraints:
    "moon_p_code_fkey" FOREIGN KEY (p_code) REFERENCES planet(p_code)


red yellow pink brown green orange 

insert into moon (name,radius,color,p_code) values 
('m2',5791.1424,'red','p22'),
('m3',5791.24,'gray','p111'),
('m1',5791.124,'pink','p99'),
('m4',5791.224,'red','p11'),
('m5',5741.924,'yellow','p44'),
('m6',5791.24,'pink','p11'),
('m7',5771.924,'red','p66'),
('m8',5791.24,'gray','p11'),
('m9',5761.924,'yellow','p44'),
('m10',571.924,'pink','p11'),
('m11',571.9924,'brown','p333'),
('m12',571.9424,'gray','p11'),
('m13',571.924,'pink','p44'),
('m14',571.9324,'yellow','p88'),
('m15',571.9824,'brown','p55'),
('m16',571.924,'gray','p22'),
('m17',571.7924,'green','p88'),
('m18',571.924,'pink','p11'),
('m19',571.4924,'yellow','p44'),
('m20',571.924,'gray','p88'),
('m21',531.924,'pink','p22'),
('m22',571.6924,'gray','p666'),
('m23',571.9824,'yellow','p00'),
('m24',571.5924,'green','p444'),
('m25',571.1924,'orange','p55');


create table dwarf();

create table blackhole(blackhole_id serial primary key, name varchar(255) unique,bh_id varchar(5) not null);

insert into blackhole (name,bh_id) values ('bh1','bh11'),('bh2','bh22'),('bh3','bh33'),('bh4','bh44');
